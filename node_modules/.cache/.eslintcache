[{"/Users/valhalla/Desktop/React/DiveBuddy/src/index.js":"1","/Users/valhalla/Desktop/React/DiveBuddy/src/App.js":"2","/Users/valhalla/Desktop/React/DiveBuddy/src/StartPage/Login.js":"3","/Users/valhalla/Desktop/React/DiveBuddy/src/StartPage/Register.js":"4","/Users/valhalla/Desktop/React/DiveBuddy/src/Title/Title.js":"5","/Users/valhalla/Desktop/React/DiveBuddy/src/Instructor/Instructor_Dash.js":"6","/Users/valhalla/Desktop/React/DiveBuddy/src/Student/Student_Dash.js":"7","/Users/valhalla/Desktop/React/DiveBuddy/src/Instructor/instructor_title.js":"8","/Users/valhalla/Desktop/React/DiveBuddy/src/Student/student_title.js":"9"},{"size":752,"mtime":1671029592290,"results":"10","hashOfConfig":"11"},{"size":525,"mtime":1670754251850,"results":"12","hashOfConfig":"11"},{"size":3378,"mtime":1671105821590,"results":"13","hashOfConfig":"11"},{"size":4360,"mtime":1671358101960,"results":"14","hashOfConfig":"11"},{"size":155,"mtime":1670583573736,"results":"15","hashOfConfig":"11"},{"size":824,"mtime":1671525410419,"results":"16","hashOfConfig":"11"},{"size":800,"mtime":1671525454898,"results":"17","hashOfConfig":"11"},{"size":176,"mtime":1671352708737,"results":"18","hashOfConfig":"11"},{"size":163,"mtime":1671353307966,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},"1pi9rdx",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/valhalla/Desktop/React/DiveBuddy/src/index.js",["51","52"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Instructor_Dash from \"./Instructor/Instructor_Dash\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { Login } from \"./StartPage/Login\";\nimport Student_Dash from \"./Student/Student_Dash\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route index element={<App />} />\n        <Route path=\"login\" element={<Login />} />\n        <Route path=\"instructor\" element={<Instructor_Dash />} />\n        <Route path=\"student\" element={<Student_Dash />} />\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>\n);\n",[],"/Users/valhalla/Desktop/React/DiveBuddy/src/App.js",[],[],"/Users/valhalla/Desktop/React/DiveBuddy/src/StartPage/Login.js",["53"],[],"import React, { useState } from \"react\";\nimport Title from \"../Title/Title\";\nimport { useNavigate } from \"react-router-dom\";\nimport Select from \"react-select\";\n\nexport const Login = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n\n  const [isValid, setIsValid] = useState(true);\n\n  const navigate = useNavigate();\n\n  const [authenticated, setAuthenticated] = useState(\n    localStorage.getItem(localStorage.getItem(\"authenticated\") || false)\n  );\n\n  // FIREBASE\n  const users = [\n    { email: \"example@gmail.com\", title: \"Instructor\", password: \"test1234\" },\n    { email: \"student@gmail.com\", title: \"Student\", password: \"test1234\" },\n  ];\n\n  const emailChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setPassword(event.target.value);\n  };\n\n  const titleChangeHandler = (event) => {\n    if (event?.value != null) {\n      setIsValid(true);\n    }\n    setTitle(event.value);\n  };\n\n  const options = [\n    { value: \"Instructor\", label: \"Instructor\" },\n    { value: \"Student\", label: \"Student\" },\n  ];\n\n  const handlerSubmit = (event) => {\n    event.preventDefault();\n    if (\n      email.trim().length === 0 ||\n      password.trim().length === 0 ||\n      title === null\n    ) {\n      setIsValid(false);\n      return;\n    }\n    const account = users.find((user) => user.email === email);\n    if (account && account.password === password && account.title === title) {\n      setAuthenticated(true);\n      localStorage.setItem(\"authenticated\", true);\n      if (title === \"Instructor\") {\n        navigate(\"/instructor\");\n      } else if (title === \"Student\") {\n        navigate(\"/student\");\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Title />\n      <div className=\"auth-form-container\">\n        <h2>Login</h2>\n        <form className=\"login-form\" onSubmit={handlerSubmit}>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            style={{\n              borderColor: !isValid ? \"red\" : \"#ccc\",\n              background: !isValid ? \"salmon\" : \"transparent\",\n            }}\n            autoFocus\n            value={email}\n            onChange={emailChangeHandler}\n            type=\"email\"\n            placeholder=\"example@gmail.com\"\n            id=\"email\"\n            name=\"email\"\n          />\n          <label htmlFor=\"title\">Title</label>\n          <Select\n            options={options}\n            name=\"title\"\n            id=\"title\"\n            onChange={titleChangeHandler}\n          />\n          <input\n            style={{\n              borderColor: !isValid ? \"red\" : \"#ccc\",\n              background: !isValid ? \"salmon\" : \"transparent\",\n            }}\n            value={password}\n            onChange={passwordChangeHandler}\n            type=\"password\"\n            placeholder=\"*********\"\n            id=\"password\"\n            name=\"password\"\n          />\n          <button type=\"submit\">Log In</button>\n        </form>\n        <button\n          className=\"link-btn\"\n          onClick={() => props.onFormSwitch(\"register\")}\n        >\n          Don't have an account? Register here\n        </button>\n      </div>\n    </div>\n  );\n};\n","/Users/valhalla/Desktop/React/DiveBuddy/src/StartPage/Register.js",["54","55"],[],"import React, { useState, useEffect } from \"react\";\nimport Title from \"../Title/Title\";\nimport { useNavigate } from \"react-router-dom\";\nimport Select from \"react-select\";\n\nexport const Register = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [ID, setID] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n\n  const navigate = useNavigate();\n\n  const [authenticated, setAuthenticated] = useState(\n    localStorage.getItem(localStorage.getItem(\"authenticated\") || false)\n  );\n\n  const nameChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setName(event.target.value);\n  };\n\n  const emailChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setPassword(event.target.value);\n  };\n\n  const idChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setID(event.target.value);\n  };\n\n  const titleChangeHandler = (event) => {\n    if (event?.value != null) {\n      setIsValid(true);\n    }\n    setTitle(event.value);\n  };\n\n  const options = [\n    { value: \"Instructor\", label: \"Instructor\" },\n    { value: \"Student\", label: \"Student\" },\n  ];\n\n  const handlerSubmit = (event) => {\n    event.preventDefault();\n    if (\n      name.trim().length === 0 ||\n      email.trim().length === 0 ||\n      password.trim().length === 0 ||\n      ID.trim().length === 0 ||\n      title === null\n    ) {\n      setIsValid(false);\n      return;\n    }\n    if (password.length > 4 && ID.length === 9) {\n      setAuthenticated(true);\n      localStorage.setItem(\"authenticated\", true);\n      if (title === \"Instructor\") {\n        navigate(\"/instructor\");\n      } else if (title === \"Student\") {\n        navigate(\"/student\");\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Title />\n      <div className=\"auth-form-container\">\n        <h2>Register</h2>\n        <form className=\"register-form\" onSubmit={handlerSubmit}>\n          <label htmlFor=\"name\">Full name</label>\n          <input\n            style={{\n              borderColor: !isValid ? \"red\" : \"#ccc\",\n              background: !isValid ? \"salmon\" : \"transparent\",\n            }}\n            autoFocus\n            value={name}\n            onChange={nameChangeHandler}\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Israel Israeli\"\n          />\n          <label htmlFor=\"email\">Email</label>\n          <input\n            style={{\n              borderColor: !isValid ? \"red\" : \"#ccc\",\n              background: !isValid ? \"salmon\" : \"transparent\",\n            }}\n            value={email}\n            onChange={emailChangeHandler}\n            type=\"email\"\n            placeholder=\"example@gmail.com\"\n            id=\"email\"\n            name=\"email\"\n          />\n          <label htmlFor=\"id\">ID</label>\n          <input\n            style={{\n              borderColor: !isValid ? \"red\" : \"#ccc\",\n              background: !isValid ? \"salmon\" : \"transparent\",\n            }}\n            value={ID}\n            onChange={idChangeHandler}\n            name=\"id\"\n            id=\"id\"\n            placeholder=\"your id\"\n          />\n          <label htmlFor=\"title\">Title</label>\n          <Select\n            options={options}\n            name=\"title\"\n            id=\"title\"\n            onChange={titleChangeHandler}\n          />\n          <label htmlFor=\"password\">Password</label>\n          <input\n            style={{\n              borderColor: !isValid ? \"red\" : \"#ccc\",\n              background: !isValid ? \"salmon\" : \"transparent\",\n            }}\n            value={password}\n            type=\"password\"\n            onChange={passwordChangeHandler}\n            placeholder=\"*******\"\n            id=\"password\"\n            name=\"password\"\n          />\n          <button type=\"submit\">Sign Up</button>\n        </form>\n        <button\n          className=\"link-btn\"\n          onClick={() => props.onFormSwitch(\"login\")}\n        >\n          Already have an account? Login here\n        </button>\n      </div>\n    </div>\n  );\n};\n","/Users/valhalla/Desktop/React/DiveBuddy/src/Title/Title.js",[],[],"/Users/valhalla/Desktop/React/DiveBuddy/src/Instructor/Instructor_Dash.js",["56"],[],"/Users/valhalla/Desktop/React/DiveBuddy/src/Student/Student_Dash.js",["57"],[],"/Users/valhalla/Desktop/React/DiveBuddy/src/Instructor/instructor_title.js",[],[],"/Users/valhalla/Desktop/React/DiveBuddy/src/Student/student_title.js",[],[],{"ruleId":"58","severity":1,"message":"59","line":17,"column":43,"nodeType":"60","messageId":"61","endLine":17,"endColumn":62},{"ruleId":"58","severity":1,"message":"62","line":18,"column":40,"nodeType":"60","messageId":"61","endLine":18,"endColumn":56},{"ruleId":"63","severity":1,"message":"64","line":16,"column":10,"nodeType":"65","messageId":"66","endLine":16,"endColumn":23},{"ruleId":"63","severity":1,"message":"67","line":1,"column":27,"nodeType":"65","messageId":"66","endLine":1,"endColumn":36},{"ruleId":"63","severity":1,"message":"64","line":16,"column":10,"nodeType":"65","messageId":"66","endLine":16,"endColumn":23},{"ruleId":"63","severity":1,"message":"68","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":18},{"ruleId":"63","severity":1,"message":"68","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":18},"react/jsx-pascal-case","Imported JSX component Instructor_Dash must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Student_Dash must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'authenticated' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Navigate' is defined but never used."]