[{"/Users/valhalla/Desktop/React/dive/src/index.js":"1","/Users/valhalla/Desktop/React/dive/src/App.js":"2","/Users/valhalla/Desktop/React/dive/src/Login.js":"3","/Users/valhalla/Desktop/React/dive/src/Register.js":"4","/Users/valhalla/Desktop/React/dive/src/Title.js":"5","/Users/valhalla/Desktop/React/DiveBuddy/src/index.js":"6","/Users/valhalla/Desktop/React/DiveBuddy/src/App.js":"7","/Users/valhalla/Desktop/React/DiveBuddy/src/StartPage/Login.js":"8","/Users/valhalla/Desktop/React/DiveBuddy/src/StartPage/Register.js":"9","/Users/valhalla/Desktop/React/DiveBuddy/src/Title/Title.js":"10","/Users/valhalla/Desktop/React/DiveBuddy/src/Instructor/Instructor_Dash.js":"11","/Users/valhalla/Desktop/React/DiveBuddy/src/Student/Student_Dash.js":"12","/Users/valhalla/Desktop/React/DiveBuddy/src/Instructor/instructor_title.js":"13","/Users/valhalla/Desktop/React/DiveBuddy/src/Student/student_title.js":"14"},{"size":254,"mtime":1670518565415,"results":"15","hashOfConfig":"16"},{"size":534,"mtime":1670518684866,"results":"17","hashOfConfig":"16"},{"size":2062,"mtime":1670580404449,"results":"18","hashOfConfig":"16"},{"size":2703,"mtime":1670580761231,"results":"19","hashOfConfig":"16"},{"size":155,"mtime":1670518636332,"results":"20","hashOfConfig":"16"},{"size":752,"mtime":1671029592290,"results":"21","hashOfConfig":"22"},{"size":525,"mtime":1670754251850,"results":"23","hashOfConfig":"22"},{"size":3378,"mtime":1671105821590,"results":"24","hashOfConfig":"22"},{"size":4954,"mtime":1671305535040,"results":"25","hashOfConfig":"22"},{"size":155,"mtime":1670583573736,"results":"26","hashOfConfig":"22"},{"size":780,"mtime":1671353015144,"results":"27","hashOfConfig":"22"},{"size":768,"mtime":1671353339260,"results":"28","hashOfConfig":"22"},{"size":176,"mtime":1671352708737,"results":"29","hashOfConfig":"22"},{"size":163,"mtime":1671353307966,"results":"30","hashOfConfig":"22"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m5ly1p",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},"1pi9rdx",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/valhalla/Desktop/React/dive/src/index.js",[],[],"/Users/valhalla/Desktop/React/dive/src/App.js",["77"],[],"/Users/valhalla/Desktop/React/dive/src/Login.js",[],[],"/Users/valhalla/Desktop/React/dive/src/Register.js",[],[],"/Users/valhalla/Desktop/React/dive/src/Title.js",[],[],"/Users/valhalla/Desktop/React/DiveBuddy/src/index.js",["78","79"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Instructor_Dash from \"./Instructor/Instructor_Dash\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { Login } from \"./StartPage/Login\";\nimport Student_Dash from \"./Student/Student_Dash\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route index element={<App />} />\n        <Route path=\"login\" element={<Login />} />\n        <Route path=\"instructor\" element={<Instructor_Dash />} />\n        <Route path=\"student\" element={<Student_Dash />} />\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>\n);\n",[],"/Users/valhalla/Desktop/React/DiveBuddy/src/App.js",[],[],"/Users/valhalla/Desktop/React/DiveBuddy/src/StartPage/Login.js",["80"],[],"import React, { useState } from \"react\";\nimport Title from \"../Title/Title\";\nimport { useNavigate } from \"react-router-dom\";\nimport Select from \"react-select\";\n\nexport const Login = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n\n  const [isValid, setIsValid] = useState(true);\n\n  const navigate = useNavigate();\n\n  const [authenticated, setAuthenticated] = useState(\n    localStorage.getItem(localStorage.getItem(\"authenticated\") || false)\n  );\n\n  // FIREBASE\n  const users = [\n    { email: \"example@gmail.com\", title: \"Instructor\", password: \"test1234\" },\n    { email: \"student@gmail.com\", title: \"Student\", password: \"test1234\" },\n  ];\n\n  const emailChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setPassword(event.target.value);\n  };\n\n  const titleChangeHandler = (event) => {\n    if (event?.value != null) {\n      setIsValid(true);\n    }\n    setTitle(event.value);\n  };\n\n  const options = [\n    { value: \"Instructor\", label: \"Instructor\" },\n    { value: \"Student\", label: \"Student\" },\n  ];\n\n  const handlerSubmit = (event) => {\n    event.preventDefault();\n    if (\n      email.trim().length === 0 ||\n      password.trim().length === 0 ||\n      title === null\n    ) {\n      setIsValid(false);\n      return;\n    }\n    const account = users.find((user) => user.email === email);\n    if (account && account.password === password && account.title === title) {\n      setAuthenticated(true);\n      localStorage.setItem(\"authenticated\", true);\n      if (title === \"Instructor\") {\n        navigate(\"/instructor\");\n      } else if (title === \"Student\") {\n        navigate(\"/student\");\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Title />\n      <div className=\"auth-form-container\">\n        <h2>Login</h2>\n        <form className=\"login-form\" onSubmit={handlerSubmit}>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            style={{\n              borderColor: !isValid ? \"red\" : \"#ccc\",\n              background: !isValid ? \"salmon\" : \"transparent\",\n            }}\n            autoFocus\n            value={email}\n            onChange={emailChangeHandler}\n            type=\"email\"\n            placeholder=\"example@gmail.com\"\n            id=\"email\"\n            name=\"email\"\n          />\n          <label htmlFor=\"title\">Title</label>\n          <Select\n            options={options}\n            name=\"title\"\n            id=\"title\"\n            onChange={titleChangeHandler}\n          />\n          <input\n            style={{\n              borderColor: !isValid ? \"red\" : \"#ccc\",\n              background: !isValid ? \"salmon\" : \"transparent\",\n            }}\n            value={password}\n            onChange={passwordChangeHandler}\n            type=\"password\"\n            placeholder=\"*********\"\n            id=\"password\"\n            name=\"password\"\n          />\n          <button type=\"submit\">Log In</button>\n        </form>\n        <button\n          className=\"link-btn\"\n          onClick={() => props.onFormSwitch(\"register\")}\n        >\n          Don't have an account? Register here\n        </button>\n      </div>\n    </div>\n  );\n};\n","/Users/valhalla/Desktop/React/DiveBuddy/src/StartPage/Register.js",["81"],[],"import React, { useState, useEffect } from \"react\";\nimport Title from \"../Title/Title\";\nimport { useNavigate } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { gapi } from \"gapi-script\";\n\nexport const Register = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [ID, setID] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n\n  // google sign in button functions\n  const clientID =\n    \"412937453004-i7t4g7a9riucgcpbu90cr9arah36f47l.apps.googleusercontent.com\";\n\n  useEffect(() => {\n    const initClient = () => {\n      gapi.client.init({\n        clientID: clientID,\n        scope: \"\",\n      });\n    };\n    gapi.load(\"client:auth2\", initClient);\n  });\n\n  const navigate = useNavigate();\n\n  const [authenticated, setAuthenticated] = useState(\n    localStorage.getItem(localStorage.getItem(\"authenticated\") || false)\n  );\n\n  const nameChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setName(event.target.value);\n  };\n\n  const emailChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setPassword(event.target.value);\n  };\n\n  const idChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setID(event.target.value);\n  };\n\n  const titleChangeHandler = (event) => {\n    if (event?.value != null) {\n      setIsValid(true);\n    }\n    setTitle(event.value);\n  };\n\n  const options = [\n    { value: \"Instructor\", label: \"Instructor\" },\n    { value: \"Student\", label: \"Student\" },\n  ];\n\n  const handlerSubmit = (event) => {\n    event.preventDefault();\n    if (\n      name.trim().length === 0 ||\n      email.trim().length === 0 ||\n      password.trim().length === 0 ||\n      ID.trim().length === 0 ||\n      title === null\n    ) {\n      setIsValid(false);\n      return;\n    }\n    if (password.length > 4 && ID.length === 9) {\n      setAuthenticated(true);\n      localStorage.setItem(\"authenticated\", true);\n      if (title === \"Instructor\") {\n        navigate(\"/instructor\");\n      } else if (title === \"Student\") {\n        navigate(\"/student\");\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Title />\n      <div className=\"auth-form-container\">\n        <h2>Register</h2>\n        <form className=\"register-form\" onSubmit={handlerSubmit}>\n          <label htmlFor=\"name\">Full name</label>\n          <input\n            style={{\n              borderColor: !isValid ? \"red\" : \"#ccc\",\n              background: !isValid ? \"salmon\" : \"transparent\",\n            }}\n            autoFocus\n            value={name}\n            onChange={nameChangeHandler}\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Israel Israeli\"\n          />\n          <label htmlFor=\"email\">Email</label>\n          <input\n            style={{\n              borderColor: !isValid ? \"red\" : \"#ccc\",\n              background: !isValid ? \"salmon\" : \"transparent\",\n            }}\n            value={email}\n            onChange={emailChangeHandler}\n            type=\"email\"\n            placeholder=\"example@gmail.com\"\n            id=\"email\"\n            name=\"email\"\n          />\n          <label htmlFor=\"id\">ID</label>\n          <input\n            style={{\n              borderColor: !isValid ? \"red\" : \"#ccc\",\n              background: !isValid ? \"salmon\" : \"transparent\",\n            }}\n            value={ID}\n            onChange={idChangeHandler}\n            name=\"id\"\n            id=\"id\"\n            placeholder=\"your id\"\n          />\n          <label htmlFor=\"title\">Title</label>\n          <Select\n            options={options}\n            name=\"title\"\n            id=\"title\"\n            onChange={titleChangeHandler}\n          />\n          <label htmlFor=\"password\">Password</label>\n          <input\n            style={{\n              borderColor: !isValid ? \"red\" : \"#ccc\",\n              background: !isValid ? \"salmon\" : \"transparent\",\n            }}\n            value={password}\n            type=\"password\"\n            onChange={passwordChangeHandler}\n            placeholder=\"*******\"\n            id=\"password\"\n            name=\"password\"\n          />\n          <button type=\"submit\">Sign Up</button>\n        </form>\n        <button\n          className=\"link-btn\"\n          onClick={() => props.onFormSwitch(\"login\")}\n        >\n          Already have an account? Login here\n        </button>\n        <GoogleLogin\n          clientId=\"{clientID}\"\n          buttonText=\"Sign Up with Google\"\n          cookiePolicy={\"single_host_origin\"}\n          isSignedIn={true}\n        />\n      </div>\n    </div>\n  );\n};\n","/Users/valhalla/Desktop/React/DiveBuddy/src/Title/Title.js",[],[],"/Users/valhalla/Desktop/React/DiveBuddy/src/Instructor/Instructor_Dash.js",["82"],[],"/Users/valhalla/Desktop/React/DiveBuddy/src/Student/Student_Dash.js",["83"],[],"/Users/valhalla/Desktop/React/DiveBuddy/src/Instructor/instructor_title.js",[],[],"/Users/valhalla/Desktop/React/DiveBuddy/src/Student/student_title.js",[],[],{"ruleId":"84","severity":1,"message":"85","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":13},{"ruleId":"88","severity":1,"message":"89","line":17,"column":43,"nodeType":"90","messageId":"91","endLine":17,"endColumn":62},{"ruleId":"88","severity":1,"message":"92","line":18,"column":40,"nodeType":"90","messageId":"91","endLine":18,"endColumn":56},{"ruleId":"84","severity":1,"message":"93","line":16,"column":10,"nodeType":"86","messageId":"87","endLine":16,"endColumn":23},{"ruleId":"84","severity":1,"message":"93","line":32,"column":10,"nodeType":"86","messageId":"87","endLine":32,"endColumn":23},{"ruleId":"84","severity":1,"message":"94","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":18},{"ruleId":"84","severity":1,"message":"94","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":18},"no-unused-vars","'Title' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component Instructor_Dash must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Student_Dash must be in PascalCase or SCREAMING_SNAKE_CASE","'authenticated' is assigned a value but never used.","'Navigate' is defined but never used."]