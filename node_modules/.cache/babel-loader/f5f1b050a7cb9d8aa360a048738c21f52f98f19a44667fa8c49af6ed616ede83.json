{"ast":null,"code":"var _jsxFileName = \"/Users/valhalla/Desktop/React/DiveBuddy/src/StartPage/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Title from \"../Title/Title\";\nimport { useNavigate } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = props => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n  const navigate = useNavigate();\n  const [authenticated, setAuthenticated] = useState(localStorage.getItem(localStorage.getItem(\"authenticated\") || false));\n  const users = [{\n    email: \"example@gmail.com\",\n    password: \"test1234\",\n    title: \"Instructor\"\n  }];\n  const emailChangeHandler = event => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setEmail(event.target.value);\n  };\n  const passwordChangeHandler = event => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setPassword(event.target.value);\n  };\n  const titleChangeHandler = event => {\n    setTitle(event.target.value);\n  };\n  const options = [{\n    value: \"Instructor\",\n    label: \"Instructor\"\n  }, {\n    value: \"Student\",\n    label: \"Student\"\n  }];\n  const Option = _ref => {\n    let {\n      value,\n      description\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: value,\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this);\n  };\n  const SelectBox = _ref2 => {\n    let {\n      children,\n      onChange,\n      value\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: onChange,\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this);\n  };\n  const handlerSubmit = event => {\n    event.preventDefault();\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      setIsValid(false);\n      return;\n    }\n    const account = users.find(user => user.email === email);\n    if (account && account.password === password && account.title === title) {\n      setAuthenticated(true);\n      localStorage.setItem(\"authenticated\", true);\n      navigate(\"/dashboard\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: handlerSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            borderColor: !isValid ? \"red\" : \"#ccc\",\n            background: !isValid ? \"salmon\" : \"transparent\"\n          },\n          autoFocus: true,\n          value: email,\n          onChange: emailChangeHandler,\n          type: \"email\",\n          placeholder: \"example@gmail.com\",\n          id: \"email\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectBox, {\n          onChange: titleChangeHandler,\n          options: options,\n          children: /*#__PURE__*/_jsxDEV(Option, {\n            value: \"1\",\n            description: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            borderColor: !isValid ? \"red\" : \"#ccc\",\n            background: !isValid ? \"salmon\" : \"transparent\"\n          },\n          value: password,\n          onChange: passwordChangeHandler,\n          type: \"password\",\n          placeholder: \"*********\",\n          id: \"password\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"link-btn\",\n        onClick: () => props.onFormSwitch(\"register\"),\n        children: \"Don't have an account? Register here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"wa8XA5XXnVqMH7DhhbLhMXYOPQ0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Title","useNavigate","Select","Login","props","email","setEmail","title","setTitle","password","setPassword","isValid","setIsValid","navigate","authenticated","setAuthenticated","localStorage","getItem","users","emailChangeHandler","event","target","value","trim","length","passwordChangeHandler","titleChangeHandler","options","label","Option","description","SelectBox","children","onChange","handlerSubmit","preventDefault","account","find","user","setItem","borderColor","background","onFormSwitch"],"sources":["/Users/valhalla/Desktop/React/DiveBuddy/src/StartPage/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Title from \"../Title/Title\";\nimport { useNavigate } from \"react-router-dom\";\nimport Select from \"react-select\";\n\nexport const Login = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n\n  const navigate = useNavigate();\n\n  const [authenticated, setAuthenticated] = useState(\n    localStorage.getItem(localStorage.getItem(\"authenticated\") || false)\n  );\n\n  const users = [\n    { email: \"example@gmail.com\", password: \"test1234\", title: \"Instructor\" },\n  ];\n\n  const emailChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setPassword(event.target.value);\n  };\n\n  const titleChangeHandler = (event) => {\n    setTitle(event.target.value);\n  };\n\n  const options = [\n    { value: \"Instructor\", label: \"Instructor\" },\n    { value: \"Student\", label: \"Student\" },\n  ];\n\n  const Option = ({ value, description }) => (\n    <option value={value}>{description}</option>\n  );\n\n  const SelectBox = ({ children, onChange, value }) => (\n    <select onChange={onChange} value={value}>\n      {children}\n    </select>\n  );\n\n  const handlerSubmit = (event) => {\n    event.preventDefault();\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      setIsValid(false);\n      return;\n    }\n    const account = users.find((user) => user.email === email);\n    if (account && account.password === password && account.title === title) {\n      setAuthenticated(true);\n      localStorage.setItem(\"authenticated\", true);\n      navigate(\"/dashboard\");\n    }\n  };\n\n  return (\n    <div>\n      <Title />\n      <div className=\"auth-form-container\">\n        <h2>Login</h2>\n        <form className=\"login-form\" onSubmit={handlerSubmit}>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            style={{\n              borderColor: !isValid ? \"red\" : \"#ccc\",\n              background: !isValid ? \"salmon\" : \"transparent\",\n            }}\n            autoFocus\n            value={email}\n            onChange={emailChangeHandler}\n            type=\"email\"\n            placeholder=\"example@gmail.com\"\n            id=\"email\"\n            name=\"email\"\n          />\n          <label htmlFor=\"email\">Title</label>\n          <SelectBox onChange={titleChangeHandler} options={options}>\n            <Option value=\"1\" description></Option>\n          </SelectBox>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            style={{\n              borderColor: !isValid ? \"red\" : \"#ccc\",\n              background: !isValid ? \"salmon\" : \"transparent\",\n            }}\n            value={password}\n            onChange={passwordChangeHandler}\n            type=\"password\"\n            placeholder=\"*********\"\n            id=\"password\"\n            name=\"password\"\n          />\n          <button type=\"submit\">Log In</button>\n        </form>\n        <button\n          className=\"link-btn\"\n          onClick={() => props.onFormSwitch(\"register\")}\n        >\n          Don't have an account? Register here\n        </button>\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}