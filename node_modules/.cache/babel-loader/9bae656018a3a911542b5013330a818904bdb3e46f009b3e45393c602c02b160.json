{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { GoogleAuthProvider, getAuth, signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword, sendPasswordResetEmail, signOut } from \"firebase/auth\";\nimport { getFirestore, query, getDocs, collection, where, addDoc } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB-EcBPXx3UdNDJIW5SF9GWEX0tnj2nDQU\",\n  authDomain: \"dive-buddy-a0b62.firebaseapp.com\",\n  projectId: \"dive-buddy-a0b62\",\n  storageBucket: \"dive-buddy-a0b62.appspot.com\",\n  messagingSenderId: \"591432718206\",\n  appId: \"1:591432718206:web:74dc52f7838ecb94f2052f\"\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\n// function for the LOGIN\nconst loginWithEmailAndPassword = async (email, password, title) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password, title);\n  } catch (err) {\n    alert(err.message);\n  }\n};\n\n// function for the REGISTER\nconst registerWithEmailAndPassword = async (email, password, name, ID, title) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      name,\n      ID,\n      title,\n      authProvider: \"local\",\n      email\n    });\n  } catch (err) {\n    alert(err.message);\n  }\n};\n\n// function to password rest (OPTIONAL)\nconst sendPasswordReset = async email => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    alert(err.message);\n  }\n};\n\n// function for LOGOUT\nconst logout = () => {\n  signOut(auth);\n};\nexport { auth, db, signInWithEmailAndPassword, loginWithEmailAndPassword, registerWithEmailAndPassword, sendPasswordReset, logout };","map":{"version":3,"names":["initializeApp","GoogleAuthProvider","getAuth","signInWithPopup","signInWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordResetEmail","signOut","getFirestore","query","getDocs","collection","where","addDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","db","loginWithEmailAndPassword","email","password","title","err","alert","message","registerWithEmailAndPassword","name","ID","res","user","uid","authProvider","sendPasswordReset","logout"],"sources":["/Users/valhalla/Desktop/React/DiveBuddy/src/firebase.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport {\n  GoogleAuthProvider,\n  getAuth,\n  signInWithPopup,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  sendPasswordResetEmail,\n  signOut,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB-EcBPXx3UdNDJIW5SF9GWEX0tnj2nDQU\",\n  authDomain: \"dive-buddy-a0b62.firebaseapp.com\",\n  projectId: \"dive-buddy-a0b62\",\n  storageBucket: \"dive-buddy-a0b62.appspot.com\",\n  messagingSenderId: \"591432718206\",\n  appId: \"1:591432718206:web:74dc52f7838ecb94f2052f\",\n};\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\n// function for the LOGIN\nconst loginWithEmailAndPassword = async (email, password, title) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password, title);\n  } catch (err) {\n    alert(err.message);\n  }\n};\n\n// function for the REGISTER\nconst registerWithEmailAndPassword = async (\n  email,\n  password,\n  name,\n  ID,\n  title\n) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      name,\n      ID,\n      title,\n      authProvider: \"local\",\n      email,\n    });\n  } catch (err) {\n    alert(err.message);\n  }\n};\n\n// function to password rest (OPTIONAL)\nconst sendPasswordReset = async (email) => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    alert(err.message);\n  }\n};\n\n// function for LOGOUT\nconst logout = () => {\n  signOut(auth);\n};\n\nexport {\n  auth,\n  db,\n  signInWithEmailAndPassword,\n  loginWithEmailAndPassword,\n  registerWithEmailAndPassword,\n  sendPasswordReset,\n  logout,\n};\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SACEC,kBAAkB,EAClBC,OAAO,EACPC,eAAe,EACfC,0BAA0B,EAC1BC,8BAA8B,EAC9BC,sBAAsB,EACtBC,OAAO,QACF,eAAe;AACtB,SACEC,YAAY,EACZC,KAAK,EACLC,OAAO,EACPC,UAAU,EACVC,KAAK,EACLC,MAAM,QACD,oBAAoB;AAE3B,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,kCAAkC;EAC9CC,SAAS,EAAE,kBAAkB;EAC7BC,aAAa,EAAE,8BAA8B;EAC7CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,GAAG,GAAGrB,aAAa,CAACc,cAAc,CAAC;AACzC,MAAMQ,IAAI,GAAGpB,OAAO,CAACmB,GAAG,CAAC;AACzB,MAAME,EAAE,GAAGf,YAAY,CAACa,GAAG,CAAC;;AAE5B;AACA,MAAMG,yBAAyB,GAAG,OAAOC,KAAK,EAAEC,QAAQ,EAAEC,KAAK,KAAK;EAClE,IAAI;IACF,MAAMvB,0BAA0B,CAACkB,IAAI,EAAEG,KAAK,EAAEC,QAAQ,EAAEC,KAAK,CAAC;EAChE,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;EACpB;AACF,CAAC;;AAED;AACA,MAAMC,4BAA4B,GAAG,OACnCN,KAAK,EACLC,QAAQ,EACRM,IAAI,EACJC,EAAE,EACFN,KAAK,KACF;EACH,IAAI;IACF,MAAMO,GAAG,GAAG,MAAM7B,8BAA8B,CAACiB,IAAI,EAAEG,KAAK,EAAEC,QAAQ,CAAC;IACvE,MAAMS,IAAI,GAAGD,GAAG,CAACC,IAAI;IACrB,MAAMtB,MAAM,CAACF,UAAU,CAACY,EAAE,EAAE,OAAO,CAAC,EAAE;MACpCa,GAAG,EAAED,IAAI,CAACC,GAAG;MACbJ,IAAI;MACJC,EAAE;MACFN,KAAK;MACLU,YAAY,EAAE,OAAO;MACrBZ;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;EACpB;AACF,CAAC;;AAED;AACA,MAAMQ,iBAAiB,GAAG,MAAOb,KAAK,IAAK;EACzC,IAAI;IACF,MAAMnB,sBAAsB,CAACgB,IAAI,EAAEG,KAAK,CAAC;IACzCI,KAAK,CAAC,2BAA2B,CAAC;EACpC,CAAC,CAAC,OAAOD,GAAG,EAAE;IACZC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;EACpB;AACF,CAAC;;AAED;AACA,MAAMS,MAAM,GAAG,MAAM;EACnBhC,OAAO,CAACe,IAAI,CAAC;AACf,CAAC;AAED,SACEA,IAAI,EACJC,EAAE,EACFnB,0BAA0B,EAC1BoB,yBAAyB,EACzBO,4BAA4B,EAC5BO,iBAAiB,EACjBC,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}